import dopamine.discrete_domains.gym_lib
import dopamine.discrete_domains.run_experiment
import dopamine.jax.agents.dqn.dqn_agent
import dqn_agent_new
import dopamine.jax.networks
import networks_new
import dopamine.replay_memory.circular_replay_buffer
import flax
import minatar_env

JaxxDQNAgent.observation_shape = %minatar_env.ASTERIX_SHAPE
JaxxDQNAgent.observation_dtype = %minatar_env.DTYPE 
JaxxDQNAgent.stack_size = 1 # Setting it as 4 does not work well.
JaxxDQNAgent.network = @networks_new.DQNNetwork #[OK]


JaxxDQNAgent.gamma = 0.99
JaxxDQNAgent.update_horizon = 1
JaxxDQNAgent.min_replay_history = 1000
JaxxDQNAgent.update_period = 4
JaxxDQNAgent.target_update_period = 1000

JaxxDQNAgent.minatar = True
JaxxDQNAgent.env = None
JaxxDQNAgent.normalize_obs = False
JaxxDQNAgent.hidden_layer = 0
JaxxDQNAgent.neurons = None

JaxxDQNAgent.double_dqn = False
JaxxDQNAgent.mse_inf = False #Mean Square Error Loss function
JaxxDQNAgent.noisy = False
JaxxDQNAgent.dueling = False
#JaxxDQNAgent.summary_writer = None

#JaxxDQNAgent.epsilon_fn = @dqn_agent_new.linearly_decaying_epsilon #@functools.partial(jax.jit) it's not @gin.configurable
JaxxDQNAgent.epsilon_fn = @dqn_agent.identity_epsilon

JaxxDQNAgent.optimizer = 'adam'
ccreate_optimizer.learning_rate = 0.00025 #0.0001
ccreate_optimizer.eps = 3.125e-4

create_minatar_env.game_name  = 'asterix'
TrainRunner.create_environment_fn =  @minatar_env.create_minatar_env
Runner.num_iterations = 10

Runner.training_steps = 1000000
Runner.max_steps_per_episode = 100000000

OutOfGraphReplayBuffer.replay_capacity = 100000
OutOfGraphReplayBuffer.batch_size = 32
